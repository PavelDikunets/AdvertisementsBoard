version: '3.7'
services:
  
  api:
    container_name: api
    restart: always
    depends_on:
      - migrator
      - database
    build:
      context: .
      dockerfile: src/AdvertisementsBoard/Hosts/AdvertisementsBoard.Hosts.Api/Dockerfile
    environment:
      - "ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}"
      - "ASPNETCORE_URLS=http://+:5259"
      - "ConnectionStrings__PostgresDb=Server=${POSTGRES_SERVER};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Port=${POSTGRES_PORT}"
      - "Serilog__WriteTo__2__Args__nodeUris=http://${ELASTICSEARCH_USER}:${ELASTICSEARCH_PASSWORD}@elasticsearch:9200"
    volumes:
      - ./wwwroot:/app/wwwroot
    ports:
      - "5259:5259"
    networks:
      - app
  
  migrator:
    container_name: migrator
    depends_on:
      - database
    build:
      context: .
      dockerfile: src/AdvertisementsBoard/Hosts/AdvertisementsBoard.Hosts.Migrator/Dockerfile
    entrypoint: [ "/wait-for-it.sh", "database:5432", "--" ]
    command: [ "dotnet", "AdvertisementsBoard.Hosts.Migrator.dll" ]
    environment:
      - "ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}"
      - "ConnectionStrings__PostgresDb=Server=${POSTGRES_SERVER};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Port=${POSTGRES_PORT}"
    ports:
      - "5230:5230"
    networks:
      - app
  
  database:
    container_name: database
    image: postgres:latest
    restart: always
    environment:
      - "POSTGRES_DB=${POSTGRES_DB}"
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
    volumes:
      - database-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - app

networks:
  app:

volumes:
  database-data: